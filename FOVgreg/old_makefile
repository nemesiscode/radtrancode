# Check for platform using ARCH and set the compiler flags accordingly ...
# $(LIB) and $(BIN) should be set (according to ARCH) in the .cshrc file
ifneq (,$(findstring OSF, $(ARCH)))
	FCFLAGS= -math_library fast -lnag
	FRECIPES = /home/ahab/plan2/oxpln5/radtran/release3/lib/OSF/libfrecipes.a
	FC= f77
else
	ifneq (,$(findstring YES, $(OPTIM)))
		ifneq (,$(findstring YES, $(PENT3)))
			FCFLAGS1 = -O3 -FR -w90 -w95 -cm -tpp6 -CB -CU
		else
			FCFLAGS1 = -O -FR -w90 -w95 -cm -CB -CU
		endif
	else
		FCFLAGS1 = -FR -w90 -w95
	endif
	FC = ifc
	FCFLAGS = $(FCFLAGS1) $(STATIC_FLAG)
#	FRECIPES = /home/ahab/plan2/radtran/release3/lib/Linux/libfrecipes.a
	FRECIPES = $(LIB)/libfrecipes.a

#	LIBS = -lnagfl90
#	LM_LICENSE_FILE = 7312@hercules
#	export LM_LICENSE_FILE

#_old   FCFLAGS = -O -Xf7 -lnag -f90
#_old   FRECIPES = /home/oxpln5/plan/radtran/release3/lib/Linux/libfrecipes.a
#_old   FC = f90

endif


F_SOURCES = \
	FOV_ReadIn.f \
	FOV_Rotation.f \
	verint.f \
	computeFOVgreg.f

OBJ= $(F_SOURCES:.f=.o)
LIBRARY = $(LIB)/lgregfov.a
LIBCODE= $(LIBRARY)($(OBJ))

# target definitions

all: lib

.PHONY: clean
clean:
	-rm -f $(OBJ)

.PHONY: touch
touch:
	touch $(F_SOURCES)


lib $(LIBRARY): $(LIBCODE)

$(LIBRARY)(%.o): %.f $(INCLUDES)
	$(FC) $(FCFLAGS) -c $<
	ar rv $(LIBRARY) $*.o
	ranlib $(LIBRARY)
	-rm $*.o


bin :   \
	Test_driver_FOV_nick_pos \
	Outputfov

Test_driver_FOV_nick_pos: test_driver_FOV_nick_pos.f $(LIBRARY)
	$(FC) $(FCFLAGS) -o $(BIN)/Test_driver_FOV_nick_pos test_driver_FOV_nick_pos.f $(LIBRARY)

Outputfov: outputfov.f $(LIBRARY)
	$(FC) $(FCFLAGS) -o $(BIN)/Outputfov outputfov.f $(LIBRARY)

