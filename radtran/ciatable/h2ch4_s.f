      subroutine h2ch4_s(temp,fnumin,fnumax,dnu,nf1,freq,alftot,slit1)
C       ****************************************************************
C     subroutine adapted from Borysow code to calculate CIA absorption
C     of H2-CH4 collisions (for Titan atmosphere).
C
C     Input variables:
C       temp            double  Temperature (K)
C       fnumin          double  Lowest wavenumber in spectrum (cm-1)
C       fnumax          double  Highest wavenumber in spectrum (cm-1)
C       dnu             double  Wavenumber step (cm-1)
C       slit1           double  slit width in cm-1
C
C     Output variables
C       nf              integer Number of points in spectrum
C       freq(601)       double  Frequency grid (cm-1)
C       alfatot(601)    double  Absorption coefficient (cm-1 amagat-2)
C
C     C. Nixon 30-1-97
C     Pat Irwin	2/3/12	Updated for Radtrans2.0
C
C
C        PROGRAM OF ALEKSANDRA BORYSOW TO CALCULATE H2-CH4
C        COLLISION-INDUCED DIPOLE ABSORPTION
C
      IMPLICIT double precision (A-H,O-Z)
C
      COMMON/H2POCM/FNORM
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      COMMON/RSILO/RSILO(201)
      COMMON/K1KI/IK1K0
      COMMON/BB/OMEG(201),RSI(201),RSIGG(201),ALFA,SCAL,NSOL
      COMMON/BF/G0BF,DELBF,OM0
      COMMON/H2PARTA/Q,WH2(2),B0,D0,JRANG1
      COMMON/CHPART/Q1,WCH4(2),B01,D01,JRANG2
      DIMENSION FREQ(601),ABCOEF(601),ALFTOT(601)
      DIMENSION TT(2),SS(1)
      integer idiag,iquiet
      common/diagnostic/idiag,iquiet

      Y(X,A,B,C)=A*DEXP((C*X+B)*X)

      slit = slit1
      LIKE=0
      B0=59.3392D0
      D0=0.04599D0
      WH2(1)=1.D0
      WH2(2)=3.D0
      B01=5.24D0
      D01=0.D0
      WCH4(1)=1.D0
      WCH4(2)=1.D0
C
C check for slit width - because there is a finite number of
C integration points, if the slit is too narrow then its
C convolution may be unresolved. The minimum grid point spacing
C for this code is 0.16, therefore give adequate warning
      if (slit .lt. 0.5) then
         if(idiag.gt.0)then
          print*,'ch4ch4_s: Warning'
          print*,'slit size ', slit, ' approaches minimum grid',
     &        'point spacing = 0.16 cm-1'
         endif
      end if

C check the temperature range too
      if (temp .lt. 50.0 .or. temp .gt. 300.0) then
         if(idiag.gt.0)print*, 'ch4ch4_s: Warning'
         if(idiag.gt.0)print*, 'Temperature should be 50 < T < 300 K'
      end if         

C        THIS PROGRAM GENERATES THE H2-CH4, FREE-FREE AND
C        BOUND-FREE and b-b CONTRIBUTIONS TO CIA SPECTRA
C        ntype=0 for equilibrium H2; ntype=1 for "normal" H2
C
         ntype=0
C
C        TEMPERATURES SHOULD BE BETWEEN 40. AND 300. KELVINS.
C
      NF=INT((FNUMAX-FNUMIN)/DNU+0.5D0)+1
C save this value
      nf1 =nf
      IF (NF.GT.601) NF=601
      FNUMAX=FNUMIN+DFLOAT(NF-1)*DNU

      CALL PRTSUM9(TEMP,ntype)
C
C        THE H2- CH4 SPECTRA FOR 50 - 300 K
C        ==================================
C
C        ONLY B-F AND F-F TERMS INCLUDED IN MODELLING
C        TEMPERATURE INTERPOLATION GOOD FOR 45 - 300 K
C
      X=DLOG(TEMP)
      DO 10 I=1,NF
      FREQ(I)=FNUMIN+DFLOAT(I-1)*DNU
      ALFTOT(I)=0.D0
      ABCOEF(I)=0.D0
 10   CONTINUE
C
C        THE STATISTICAL FACTORS ARE VALID ONLY FOR DELTA J > 0
C        FOR DELTA J < 0 THESE WILL BE EQUAL TO 1.
C
C     HYDROGEN QUADRUPOLE
C
      EPS=1.D-5
      TT(1)=10.D0
      CALL BND32(TEMP,RSI,NSOL)
      DO 88 I=1,NSOL
555	format(' RSI = ', e14.5)
      if (rsi(i).eq.0.d0) rsi(i)=1.d-100
      RSILO(I)=DLOG(RSI(I))
556	format('                rsilo = ', f12.4)
      OMEG(I)=DFLOAT(I-1)*DX
 88   CONTINUE
      CALL SPLINE9(NSOL,1,0,EPS,OMEG,RSILO,TT,SS,SI,NR,RSIGG)
777	format(5e12.5,/)

c          SPLINE9(L,M,K,EPS,X,Y,T,SS,SI,NR,S2)
C
      SCAL=1.D0
      S=Y(X,0.22916D1,-1.27134D0,0.12423D0)
      E=Y(X,-0.2019D1,-0.02259D0,-0.05981D0)
      T1=Y(X,0.48254d-13,0.6421D0,-0.10109D0)
      T2=Y(X,0.97826D-12,-0.48654D0,-0.0146D0)
      T3=Y(X,0.35247D-12,0.10164D0,-0.07879D0)
      T4=Y(X,0.13961D-13,1.11146D0,-0.09561D0)
C
C        THIS PART FOR MODELING A LOW FREQUENCY PART OF BOUND-FREE
C        TRANSLATIONAL SPECTRAL FUNCTION BY A DESYMMETRIZED GAUSSIAN
C        PROFILE
C        NOTE: SET G0BF=0.D0 IF NOT NEEDED
C          (SCALE UPWARD BY A FACT.OR OF 1.D+60 IF USED)
C
      G0BF=Y(X,.73536D-12,-0.79815D0,-0.0585D0)
      DELBF=Y(X,3.123D0,-0.00178D0,0.00021D0)
      OM0=Y(X,8.6922D0,0.00785D0,-0.00054D0)
C
      IK0K0=0
      CALL ADSP9C(S,E,T1,T2,T3,T4,TEMP,NF,FREQ,ABCOEF,0,LIKE,2,0,2,3)
      DO 20 I=1,NF
      ALFTOT(I)=ALFTOT(I)+ABCOEF(I)
 20   CONTINUE
C
C     PARAMETERS FOR 4045 (HYDROGEN HEXADECAPOLE) COMPONENTS
C
      CALL BND54C(TEMP,RSI,NSOL)
      DO 111 I=1,NSOL
      if (rsi(i).eq.0.d0) rsi(i)=1.d-100
      RSILO(I)=DLOG(RSI(I))
      OMEG(I)=DFLOAT(I-1)*DX
 111  CONTINUE
      CALL SPLINE9(NSOL,1,0,EPS,OMEG,RSILO,TT,SS,SI,NR,RSIGG)
C
      S=Y(X,(2.7321D0/9.D0)*0.038D0,-2.32012D0,0.23082D0)
      E=Y(X,-1.8198D0,-0.00665D0,-0.05626D0)
      T1=Y(X,1.3492D-13,0.14472D0,-0.06506D0)
      T2=Y(X,1.6596D-12,-0.77679D0,0.01401D0)
      T3=Y(X,5.9914D-13,-0.16208D0,-0.05895D0)
      T4=Y(X,1.9405D-14,0.95965D0,-0.10246D0)
C
      SCAL=0.038D0
C
      IK1K0=0
      CALL ADSP9C(S,E,T1,T2,T3,T4,TEMP,NF,FREQ,ABCOEF,0,LIKE,4,0,4,5)
C
C        METHANE-INDUCED COMPONENTS
C        ==========================
C     OCTUPOLE - INDUCED TERM (43)
C
      EPS=1.D-5
      TT(1)=10.D0
      CALL BND43(TEMP,RSI,NSOL)
	ij = 0
      DO 123 I=1,NSOL
	ij = ij + 1  
	if(mod(ij,3).eq.0) rlow1 = 1.d-100
	if(mod(ij,3).eq.1) rlow1 = 1.2d-100
	if(mod(ij,3).eq.2) rlow1 = 1.1d-100
      if (rsi(i).eq.0.d0) rsi(i)= rlow1
      RSILO(I)=DLOG(RSI(I))
	omeg(i) = dfloat(i-1)*dx  ! there was "initb" here which I removed
c	it tried to avoid zero contributions to b-b, but now it is taken
c	care once for all by substituting "rlow1" everywhere
c	it seems it runs now	
 123  CONTINUE
      CALL SPLINE9(NSOL,1,0,EPS,OMEG,RSILO,TT,SS,SI,NR,RSIGG)
C
      SCAL=1.D0
      S=Y(X,0.91196D0/7.D0,-1.56529D0,0.15284D0)
      E=Y(X,-.5D0,0.D0,0.D0)
      T1=Y(X,.51456D-13,.60523D0,-0.10856D0)
      T2=Y(X,.62514D-12,-0.51384D0,0.00754D0)
      T3=Y(X,.55346D-12,-0.40381D0,0.00208D0)
      T4=Y(X,0.13804D-13,1.9307D0,-0.27921D0)
C
      IK1K0=0
      CALL ADSPC9(S,E,T1,T2,T3,T4,TEMP,NF,FREQ,ABCOEF,0,LIKE,0,3,3,4)
C
      DO 66 I=1,NF
 66   ALFTOT(I)=ABCOEF(I)+ALFTOT(I)
C
C     THE CH4 (5,4) HEXADECAPOLE-INDUCED COMPONENT
C     ============================================
C
      EPS=1.D-5
      TT(1)=10.D0
      CALL BND54C(TEMP,RSI,NSOL)
      DO 543 I=1,NSOL
	if(rsi(i).eq.0.d0) rsi(i) = 1.d-100
      RSILO(I)=DLOG(RSI(I))
      OMEG(I)=DFLOAT(I-1)*DX
 543  CONTINUE
      CALL SPLINE9(NSOL,1,0,EPS,OMEG,RSILO,TT,SS,SI,NR,RSIGG)
C
      SCAL=1.D0
      S=Y(X,2.7321D0/9.D0,-2.32012D0,0.23082D0)
      E=Y(X,-1.8198D0,-0.00665D0,-0.05626D0)
      T1=Y(X,1.3492D-13,0.14472D0,-0.06506D0)
      T2=Y(X,1.6596D-12,-0.77679D0,0.01401D0)
      T3=Y(X,5.9914D-13,-0.16208D0,-0.05895D0)
      T4=Y(X,1.9405D-14,0.95965D0,-0.10246D0)
C
      IK1K0=0
      CALL ADSPC9(S,E,T1,T2,T3,T4,TEMP,NF,FREQ,ABCOEF,0,LIKE,0,4,4,5)
C
      DO 776 I=1,NF
 776  ALFTOT(I)=ALFTOT(I)+ABCOEF(I)

      return
      END

C ****************** beginning of subroutines **********************

      SUBROUTINE ADSP9C(G0,EP,TAU1,TAU2,TAU5,TAU6,TEMP,NF,FREQ,
     $ ABCOEF,MP,LIKE,LAMBD1,LAMBD2,LAMBDA,LVALUE)
C
C     THIS ENTRY FOR LINEAR MOLECULES
C        SET LAMBDA1 NONZERO
C
C        THIS PROGRAM GENERATES LISTING OF CIA TR ALFA(OMEGA)
C        IF EITHER LAMDA1 OR LAMDA2 EQUAL TO ZERO - SINGLE
C         TRANSITIONS;
C        LAMBDA1 CORRESPONDS TO H2, LAMBDA2 TO N2
C        LIKE=1 FOR LIKE SYSTEMS (AS H2-H2), SET LIKE=0 ELSE.
C
      IMPLICIT double precision (A-H,O-Z)
C
      COMMON/BB/OMEG(201),RSI(201),RSIGG(201),BETA,SCAL,NSOL
      COMMON/RSILO/RSILO(201)
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      COMMON/H2PARTA/Q,WH2(2),B0,D0,JRANG1
      COMMON/BF/G0BF,DELBF,OM0
      COMMON/CHPART/Q1,WCH(2),B01,D01,JRANG2
C
      DIMENSION ABCOEF(NF),FREQ(NF)
C
      DATA CLSCHM,BLTZWN/2.68675484D19,.6950304D0/
      DATA HBAR,PI,CLIGHT/1.054588757D-27,3.1415926535898D0,
     $ 2.9979250D10/
C
      EH2(I)=(B0-DFLOAT(I)*D0)*DFLOAT(I)
      PH2(J,T)=DFLOAT(2*J+1)*WH2(1+MOD(J,2))*DEXP(-1.4387859D0/T
     $ *EH2(J*(J+1)))
      ECH4(I)=B01*DFLOAT(I)
      PCH4(J,T)=DEXP(-1.4387859D0/T*ECH4(J*(J+1)))
C
      TWOPIC=2.D0*PI*CLIGHT
      IF (LIKE.NE.1) LIKE=0
C        THE G0 SCALING IS COMPENSATED AS PART OF THE FOLLOWING
C        EXPRESION
      CALIB=TWOPIC*((4.D0*PI**2)/(3.D0*HBAR*CLIGHT))*(1.D-30*CLSCHM)**2
      CALIB=CALIB/DFLOAT(1+LIKE)
      BETA=1.D0/(BLTZWN*TEMP)
      LIST=NF
      DO 88 I=1,LIST
 88   ABCOEF(I)=0.D0
C
C     ROTATIONAL SPECTRUM FOR THE DETAILED LISTING   *******************
C      WRITE (6,20) LAMBD1,LAMBD2,LAMBDA,LVALUE,G0,EP,TAU1,TAU2,TAU5,
C     $ TAU6,G0*BGAMA9(0.D0,TAU1,TAU2,EP,TAU5,TAU6,TEMP)
C 20   FORMAT(/' LAMBD1,LAMBD2, LAMBDA,LVALUE=',2I3,2X,2I3,' COMPONENT
C     $INCLUDED.'/10X,'LINE SHAPE PARAMETERS:',6E11.3,5X,'G(0)=',E11.3/)
C
      IF (LAMBD1.EQ.0) STOP 6666
C        FOR THIS ENTRY LAMBD1 HAS TO BE NONZERO
C
C        SINGLE TRANSITIONS ON HYDROGEN'S ROTATIONAL FREQUENCIES.
C        LAMBDA IS EQUAL TO LAMBD1 FOR SINGLE TRANSITIONS
C
      JPLUSL=JRANG1+LAMBDA
      DO 170 I=1,JRANG1
      J=I-1
      DO 170 IP=1,JPLUSL
      JP=IP-1
      CGS=CLBSQR9(J,LAMBDA,JP)
      IF (CGS) 170,170,160
 160  P=PH2(J,TEMP)/Q
      OMEGA1=EH2(JP*IP)-EH2(J*I)
      FAC=CALIB*P*CGS
      DO 166 IQ=1,LIST
      FRQ=FREQ(IQ)-OMEGA1
      WKI=FREQ(IQ)*(1.D0-DEXP(-BETA*FREQ(IQ)))
      WKF=WKI*FAC
      XBG=G0*BGAMA9(FRQ,TAU1,TAU2,EP,TAU5,TAU6,TEMP)
C        ADD BOUND-BOUND TRANSITIONS FOR EACH L
      IF (DABS(FRQ).LE.WNRMX3)
     $ XBG=XBG+SCAL*SPCFCT(FRQ,OMEG,RSILO,RSIGG,NSOL,BETA)
888	format( ' testing b-b in adspec', e12.5)
C        ADD GAUSS FOR L=3 ONLY
      IF (LVALUE.EQ.3.AND.G0BF.NE.0.D0)
     $ XBG=XBG+BGAUS(FRQ,G0BF,DELBF,OM0,TEMP)
C        THIS MODELS THE PART OF THE BOUND-FREE SPECTRAL
C        FUNCTION BY MEANS OF THE DESYMMETRIZED GAUSSIAN PROFILE.
C
      ABCOEF(IQ)=ABCOEF(IQ)+XBG*WKF
 166  CONTINUE
 170  CONTINUE
 999  FORMAT (' ADSPEC: ',I8,6(1X,D10.3))

      RETURN
      END

      SUBROUTINE ADSPC9(G0,EP,TAU1,TAU2,TAU5,TAU6,TEMP,NF,FREQ,
     $ ABCOEF,MP,LIKE,LAMBD1,LAMBD2,LAMBDA,LVALUE)
C
C        FOR INDUCTION BY A TETRAHEDRAL MOLECULE
C
C     THIS PROGRAM GENERATES LISTING OF CIA TR ALFA(OMEGA)
C     FOR ABSORPTION BY TETRAHEDRAL MOLECULES
C     LAMBD1 CORRESPONDS TO H2, LAMBD2 TO CH4
C     FOR THIS ENTRY SET LAMBD2 NONZERO
C     LIKE=1 FOR LIKE SYSTEMS (AS H2-H2), SET LIKE=0 ELSE.
C
      IMPLICIT double precision (A-H,O-Z)
C
      COMMON/BB/OMEG(201),RSI(201),RSIGG(201),BETA,SCAL,NSOL
      COMMON/RSILO/RSILO(201)
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      COMMON/H2PARTA/Q,WH2(2),B0,D0,JRANG1
      COMMON/CHPART/Q1,WCH(2),B01,D01,JRANG2
C
      DIMENSION ABCOEF(NF),FREQ(NF)
C
C        QUANTUM CORRECTIONS
      DIMENSION QQW3(51,3),QQW4(51,4)
      DIMENSION QW31(51),QW32(51),QW33(51),QW41(51),QW42(51),
     $ QW43(51),QW44(51)
      EQUIVALENCE (QW31(1),QQW3(1,1)),(QW32(1),QQW3(1,2)),
     $ (QW33(1),QQW3(1,3)),(QW41(1),QQW4(1,1)),(QW42(1),QQW4(1,2)),
     $ (QW43(1),QQW4(1,3)),(QW44(1),QQW4(1,4))
C
      DATA CLSCHM,BLTZWN/2.68675484D19,.6950304D0/
      DATA HBAR,PI,CLIGHT/1.054588757D-27,3.1415926535898D0,
     $ 2.9979250D10/
      DATA QW31/
     $ 3*-1.0000D0,4.09091D0,2*-1.0000D0,.79679D0,.27141D0,
     $ -.85139D0,.59819D0,-.00412D0,-.31878D0,.18283D0,.15133D0,
     $ -.32477D0,.21392D0,.02191D0,-.14717D0,.07524D0,.08569D0,
     $ -.16823D0,.10771D0,.01794D0,-.08386D0,.04014D0,.05426D0,
     $ -.10240D0,.06447D0,.01345D0,-.05399D0,.02474D0,.03726D0,
     $ -.06876D0,.04281D0,.01019D0,-.03761D0,.01670D0,.02711D0,
     $ -.04932D0,.03046D0,.00792D0,-.02769D0,.01201D0,.02059D0,
     $ -.03708D0,.02276D0,.00630D0,-.02122D0,.00904D0,.01616D0,
     $ -.02889D0/
      DATA QW32/
     $ 4*-1.000D0,1.46154D0,-1.000D0,.52036D0,-.38246D0,.48307D0,
     $ -.58061D0,.54775D0,-.42488D0,.32187D0,-.30004D0,.33377D0,
     $ -.35746D0,.33367D0,-.27900D0,.23619D0,-.22949D0,.24628D0,
     $ -.25572D0,.24034D0,-.20959D0,.18643D0,-.18371D0,.19376D0,
     $ -.19855D0,.18803D0,-.16835D0,.15390D0,-.15262D0,.15930D0,
     $ -.16211D0,.15451D0,-.14085D0,.13100D0,-.13033D0,.13510D0,
     $ -.13691D0,.13118D0,-.12115D0,.11400D0,-.11364D0,.11722D0,
     $ -.11846D0,.11400D0,-.10631D0,.10090D0,-.10070D0,.10348D0/
      DATA QW33/
     $ 1.1000D1,2*-1.000D0,1.01399D0,.09091D0,-1.000D0,.94475D0,
     $ -.16780D0,-.51321D0,.52338D0,.01421D0,-.50745D0,.49964D0,
     $ -.06185D0,-.34591D0,.34888D0,.00564D0,-.34073D0,.33830D0,
     $ -.03176D0,-.26007D0,.26130D0,.00304D0,-.25650D0,.25545D0,
     $ -.01926D0,-.20817D0,.20879D0,.00191D0,-.20566D0,.20511D0,
     $ -.01291D0,-.17348D0,.17383D0,.00131D0,-.17164D0,.17132D0,
     $ -.00925D0,-.14867D0,.14889D0,.00095D0,-.14727D0,.14707D0,
     $ -.00695D0,.13006D0,.13021D0,.00073D0,-.12896D0,.12882D0,
     $ -.00541D0,-.11559D0/
      DATA QW41/
     $ 6*-1.000D0,1.83253D0,-1.000D0,-.00478D0,.22586D0,
     $ .19088D0,-.58488D0,.55212D0,-.21168D0,-.06443D0,.05729D0,
     $ .14181D0,-.28953D0,.24581D0,-.07845D0,-.04207D0,.01948D0,
     $ .09314D0,-.16876D0,.13649D0,-.03831D0,-.02777D0,.00772D0,
     $ .06418D0,-.10976D0,.08625D0,-.02197D0,-.01938D0,.00323D0,
     $ .04653D0,-.07688D0,.05925D0,-.01398D0,-.01420D0,.00128D0,
     $ .03515D0,-.05678D0,.04315D0,-.00956D0,-.01082D0,.00037D0,
     $ .02744D0,-.04362D0,.03279D0,-.00690D0,-.00850D0/
      DATA QW42/
     $ 4*-1.000D0,2.35664D0,-1.000D0,-.43987D0,.63467D0,.00794D0,
     $ -.53268D0,.47071D0,-.04638D0,-.25892D0,.20786D0,.05459D0,
     $ -.23119D0,.17454D0,.01650D0,-.14054D0,.09758D0,.03999D0,
     $ -.12597D0,.08757D0,.02020D0,-.08639D0,.05576D0,.02883D0,
     $ -.07869D0,.05185D0,.01719D0,-.05811D0,.03585D0,.02073D0,
     $ -.05366D0,.03404D0,.01393D0,-.04166D0,.02491D0,.01572D0,
     $ -.03888D0,.02397D0,.01128D0,-.03129D0,.01828D0,.01229D0,
     $ -.02945D0,.01775D0,.00924D0,-.02434D0,.01397D0,.00985D0/
      DATA QW43/
     $ 3*-1.000D0,2.16484D0,2*-1.000D0,1.60491D0,-.46218D0,-1.000D0,
     $ 1.31017D0,-.34627D0,.78497D0,.98223D0,-.18287D0,-.72146D0,
     $ .84929D0,-.16187D0,-.59662D0,.69125D0,-.09565D0,-.55198D0,
     $ .62115D0,-.09262D0,-.47526D0,.53051D0,-.05845D0,-.44470D0,
     $ .48796D0,-.05974D0,-.39348D0,.42963D0,-.03932D0,-.37166D0,
     $ .40124D0,-.04166D0,-.33521D0,.36069D0,-.02824D0,-.31896D0,
     $ .34046D0,-.03069D0,-.29177D0,.31068D0,-.02125D0,-.27924D0,
     $ .29557D0,-.02353D0,-.25819D0,.27279D0,-.01656D0,-.024825D0/
      DATA QW44/
     $ 1.100D1,2*-1.000D0,.40260D0,.62896D0,-1.000D0,.67713D0,
     $ -.17620D0,-.04947D0,-.07182D0,.30704D0,-.40281D0,.29894D0,
     $ -.12495D0,.04080D0,-.09160D0,.19422D0,-.23764D0,.18677D0,
     $ -.09887D0,.05507D0,-.08289D0,.14023D0,-.16496D0,.13482D0,
     $ -.08186D0,.05504D0,-.07257D0,.10916D0,-.12512D0,.10520D0,
     $ -.06982D0,.05172D0,-.06377D0,.08914D0,-.10029D0,.08615D0,
     $ -.06085D0,.04781D0,-.05661D0,.07522D0,-.08345D0,.07290D0,
     $ -.05391D0,.04406D0,-.05077D0,.06501D0,-.071333D0,.06315D0,
     $ -.04838D0,.04069D0/
C
      EH2(I)=(B0-DFLOAT(I)*D0)*DFLOAT(I)
      PH2(J,T)=DFLOAT(2*J+1)*WH2(1+MOD(J,2))*DEXP(-1.4387859D0/T
     $ *EH2(J*(J+1)))
      ECH4(I)=B01*DFLOAT(I)
      PCH4(J,T)=DEXP(-1.4387859D0*ECH4(J*(J+1))/T)
C
      TWOPIC=2.D0*PI*CLIGHT
C        THE G0 SCALING IS COMPENSATED AS PART OF THE FOLLOWING
C        EXPRESION
      CALIB=TWOPIC*((4.D0*PI**2)/(3.D0*HBAR*CLIGHT))*(1.D-30*CLSCHM)**2
      CALIB=CALIB/DFLOAT(1+LIKE)
      BETA=1.D0/(BLTZWN*TEMP)
      LIST=NF
      DO 88 I=1,LIST
 88   ABCOEF(I)=0.D0

      DO 170 I=1,JRANG2
      J=I-1
      P=DFLOAT(2*J+1)*PCH4(J,TEMP)/Q1
C
      DO 172 IP=1,LAMBDA
C        POSITIVE DELTA J
      JP=J+IP
      OMEGA1=ECH4(JP*(JP+1))-ECH4(J*I)
      IF (LAMBDA.EQ.3) CC=(1.D0+QQW3(I,IP)/4.D0)
      IF (LAMBDA.EQ.4) CC=(1.D0+QQW4(I,IP)/4.D0)
      FAC=CALIB*P*CC
      DO 166 IQ=1,LIST
      FRQ=FREQ(IQ)-OMEGA1
 162  WKF=FREQ(IQ)*(1.D0-DEXP(-BETA*FREQ(IQ)))*FAC*
     $ (2.D0*DFLOAT(JP)+1.D0)
      XBG=G0*BGAMA9(FRQ,TAU1,TAU2,EP,TAU5,TAU6,TEMP)
C        ADD BOUND-BOUND TRANSITIONS
      IF (DABS(FRQ).LE.WNRMX3)
     $ XBG=XBG+SPCFCT(FRQ,OMEG,RSILO,RSIGG,NSOL,BETA)
      ABCOEF(IQ)=ABCOEF(IQ)+XBG*WKF
 166  CONTINUE
C
C        NEGATIVE DELTA J
      JP=J-IP
      IF (JP.LT.0) GO TO 172
      OMEGA1=ECH4(JP*(JP+1))-ECH4(J*I)
      FAC=CALIB*P
      DO 177 IQ=1,LIST
      FRQ=FREQ(IQ)-OMEGA1
 168  WKF=FREQ(IQ)*(1.D0-DEXP(-BETA*FREQ(IQ)))*
     $ FAC*(2.D0*DFLOAT(JP)+1.D0)
      XBG=G0*BGAMA9(FRQ,TAU1,TAU2,EP,TAU5,TAU6,TEMP)
C        ADD BOUND-BOUND TRANSITIONS
      IF (DABS(FRQ).LE.WNRMX3)
     $ XBG=XBG+SPCFCT(FRQ,OMEG,RSILO,RSIGG,NSOL,BETA)
      ABCOEF(IQ)=ABCOEF(IQ)+XBG*WKF
 177  CONTINUE
C
 172  CONTINUE
C
C        DELTA J = 0
      JP=J
      FAC=CALIB*P
      DO 188 IQ=1,LIST
      FRQ=FREQ(IQ)
 191  WKF=FREQ(IQ)*(1.D0-DEXP(-BETA*FREQ(IQ)))*FAC*
     $ (2.D0*DFLOAT(JP)+1.D0)
      XBG=G0*BGAMA9(FRQ,TAU1,TAU2,EP,TAU5,TAU6,TEMP)
C        ADD BOUND-BOUND TRANSITIONS
      IF (DABS(FRQ).LE.WNRMX3) go to 7777
	go to 8888
7777	xbb = spcfct(frq,omeg,rsilo,rsigg,nsol,beta)
       XBG=XBG+ xbb
8888   ABCOEF(IQ)=ABCOEF(IQ)+XBG*WKF
 188  CONTINUE
 170  CONTINUE

      RETURN
      END

      DOUBLE PRECISION FUNCTION CLBSQR9(L,LAMBDA,LP)
C     SQUARE OF CLEBSCH-GORDAN COEFFICIENT (L,LAMBDA,0,0;LP,0)
C     FOR INTEGER ARGUMENTS ONLY
C     NOTE THAT LAMBDA SHOULD BE SMALL, MAYBE <10 OR SO.
C
      IMPLICIT double precision (A-H,O-Z)
C
      FC=DFLOAT(2*LP+1)
      CLBSQR9=0.D0
      IF (((L+LAMBDA).LT.LP).OR.((LAMBDA+LP).LT.L).OR.((L+LP).LT.
     $LAMBDA)) RETURN
      IF (MOD(L+LP+LAMBDA,2).NE.0) RETURN
      IF ((L.LT.0).OR.(LP.LT.0).OR.(LAMBDA.LT.0)) RETURN
      F=1.D0/DFLOAT(L+LP+1-LAMBDA)
      IF (LAMBDA.EQ.0) GO TO 22
      I1=(L+LP+LAMBDA)/2
      I0=(L+LP-LAMBDA)/2+1
      DO 20 I=I0,I1
 20   F=F*DFLOAT(I)/DFLOAT(2*(2*I+1))
 22   P=FC*F*FCTL9(LAMBDA+L-LP)*FCTL9(LAMBDA+LP-L)
      CLBSQR9=P/(FCTL9((LAMBDA+L-LP)/2)*FCTL9((LAMBDA+LP-L)/2))**2
      RETURN
      END
      DOUBLE PRECISION FUNCTION FCTL9(N)
C
      IMPLICIT double precision (A-H,O-Z)
C
      P(Z)=((((-2.294720936D-4)/Z-(2.681327160D-3))/Z+(3.472222222D-3))/
     $Z+(8.333333333D-2))/Z+1.D0
      FCTL9=1.D0
      IF (N.LE.1) RETURN
      IF (N.GT.15) GO TO 20
      J=1
      DO 10 I=2,N
      J=J*I
 10   CONTINUE
      FCTL9=DFLOAT(J)
      RETURN
 20   CONTINUE
      Z=DFLOAT(N+1)
      FCTL9=(DEXP(-Z)*(Z**(Z-0.5D0))*P(Z)*2.5066282746310D0)
      RETURN
      END
      DOUBLE PRECISION FUNCTION BGAMA9(FNU,T1,T2,EPS,T3,T4,TEMP)
C     EQUATION 13, SO-CALLED EBC MODEL, OF BORYSOW,TRAFTON,FROMMHOLD,
C     AND BIRNBAUM, ASTROPHYS.J., TO BE PUBLISHED (1985)
C
      IMPLICIT double precision (A-H,O-Z)
      double precision K0
C
      DATA PI,CLIGHT/3.1415926535898D0,2.99792458D10/
      DATA HBAR,BOLTZ/1.0545887D-27,1.380662D-16/
      P1(X)=((((((.0045813D0*X+.0360768D0)*X+.2659732D0)*X
     1   +1.2067492D0)*X+3.0899424D0)*X+3.5156229D0)*X+1.D0)
      P2(X)=((((((.00000740D0*X+.00010750D0)*X+.00262698D0)*X
     2   +.03488590D0)*X+.23069756D0)*X+.42278420D0)*X-.57721566D0)
      P3(X)=((((((.00032411D0*X+.00301532D0)*X+.02658733D0)*X
     3   +.15084934D0)*X+.51498869D0)*X+.87890594D0)*X+.5D0)
      P4(X)=((((((-.00004686D0*X-.00110404D0)*X-.01919402D0)*X
     4   -.18156897D0)*X-.67278579D0)*X+.15443144D0)*X+1.D0)
      P5(X)=((((((.00053208D0*X-.00251540D0)*X+.00587872D0)*X
     5   -.01062446D0)*X+.02189568D0)*X-.07832358D0)*X+1.25331414D0)
      P6(X)=((((((-.00068245D0*X+.00325614D0)*X-.00780353D0)*X
     6   +.01504268D0)*X-.03655620D0)*X+.23498619D0)*X+1.25331414D0)
C
      OMEGA=2.D0*PI*CLIGHT*FNU
      T0=HBAR/(2.D0*BOLTZ*TEMP)
      Z=DSQRT((1.D0+(OMEGA*T1)**2)*(T2*T2+T0*T0))/T1
      IF (Z-2.D0) 10,10,12
10    XK1=Z*Z*DLOG(Z/2.D0)*P3((Z/3.75D0)**2)+P4((Z/2.D0)**2)
      GO TO 20
12    XK1=DSQRT(Z)*DEXP(-Z)*P6(2.D0/Z)
20    ZP=DSQRT((1.D0+(OMEGA*T4)**2)*(T3*T3+T0*T0))/T4
      IF (ZP-2.D0) 22,22,24
22    K0=-DLOG(ZP/2.D0)*P1((ZP/3.75D0)**2)+P2((ZP/2.D0)**2)
      GO TO 30
24    K0=DEXP(-ZP)*P5(2.D0/ZP)/DSQRT(ZP)
30    BGAMA9=((T1/PI)*DEXP(T2/T1+T0*OMEGA)*XK1/(1.D0+(T1*OMEGA)**2)
     1  +EPS*(T3/PI)*DEXP(T3/T4+T0*OMEGA)*K0)/(1.D0+EPS)
      RETURN
      END
      SUBROUTINE PRTSUM9(TEMP,ntype)
C
C     H2 ROTATIONAL PARTITION SUM Q = Q(T).
C
      IMPLICIT double precision (A-H,O-Z)
      COMMON/H2PARTA/Q,WH2(2),B0,D0,JRANG1
      COMMON/CHPART/Q1,WCH(2),B01,D01,JRANG2
C
      EH2(I)=(B0-DFLOAT(I)*D0)*DFLOAT(I)
      ECH4(I)=B01*DFLOAT(I)
      PH2(J,TT)=DFLOAT(2*J+1)*WH2(1+MOD(J,2))
     $        *DEXP(-1.4387859D0*EH2(J*(J+1))/TT)
      PCH4(J,TT)=DEXP(-1.4387859D0*ECH4(J*(J+1))/TT)
C     Q,B0,D0,WH2 - PARTITION FCT., ROT.CONSTANTS, WEIGHTS FOR H2
C     Q1,B01,D01,WCH - PARTITION FCT., ROT.CONSTANTS, WEIGHTS FOR CH4
C
      Q=0.D0
      J=0
 50   CONTINUE
      DQ=PH2(J,TEMP)
      Q=Q+DQ
      J=J+1
      IF (DQ.GT.Q/900.D0) GO TO 50
      j=-1
      s=0.d0
      if (ntype.eq.1) go to 52
 10   j=j+1
      s=s+ph2(j,temp)/q
      if (s.gt.0.996d0) go to 12
      go to 10
 12   jrang1=j+3
      go to 60
C
C        "normal" H2 requires redefinition of wh2(2)
 52   sev=0.d0
 54   j=j+1
      ds=ph2(j,temp)
      s=s+ds
      sev=sev+ds
      j=j+1
      s=s+ph2(j,temp)
      if (s.gt.0.996d0) go to 56
      go to 54
 56   jrang1=j+3
      sodd=s-sev
      wh2(2)=wh2(2)*(3.d0*sev)/sodd
C         Definition of "normal" H2: 3*S(even)=S(odd)
      q=4.d0*sev
 60   continue
C
C        PARTITION FUNCTION FOR CH4
      Q1=0.D0
      J=0
 75   DQ=PCH4(J,TEMP)*DFLOAT((2*J+1)**2)
      Q1=Q1+DQ
      J=J+1
      IF (DQ.GT.Q1/1000.D0) GO TO 75
      JRANG2=J+3

      RETURN
      END

      SUBROUTINE PROFIL(X,Y)
C
      IMPLICIT double precision (A-H,O-Z)
C
      COMMON/BL3/RSI(401)
C        A TRIANGULAR SLIT FUNCTION IS USED.
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      IF (Y) 105,106,1
 1    CONTINUE
      X0=(NSRI+1.D0)+X/DX
      NC=X0
      N1=NC+1
      SLOPE=Y/SLIT
      NU=X0-NS
      IF (NU.LT.1) NU=1
      IF (NU.GT.NSRIUP) RETURN
      NO=X0+NS
      IF (NO.GT.NSRIUP) NO=NSRIUP
      IF (NO.LT.1) RETURN
      IF (NC.GT.NSRIUP) NC=NSRIUP
      IF (NC.LE.1) GO TO 101
      DO 100 I=NU,NC
      XI=(I-1.D0)*DX-WNRMX3
      DR=SLOPE*(XI-(X-SLIT))
      IF (DR.LE.0.D0) GO TO 100
      RSI(I)=RSI(I)+DR
 100  CONTINUE
 101  IF (NC.GE.NSRIUP) RETURN
      IF (N1.LT.1) N1=1
      DO 102 I=N1,NO
      XI=(I-1.D0)*DX-WNRMX3
      DR=Y-SLOPE*(XI-X)
      IF (DR.LE.0.D0) GO TO 102
      RSI(I)=RSI(I)+DR
 102  CONTINUE
      RETURN
 105  continue
 106  CONTINUE
      RETURN
      END

      DOUBLE PRECISION FUNCTION SPCFCT(FREQ,OMEGA,PHI,PHI2,N,RTEMP)
C        THIS INTERPOLATES THE SPECTRAL FUNCTION PHI(FREQ)
C        DEFINED AT OMEGA(N) AS PHI(N).  PHI2 IS THE SECOND
C        DERIVATIVE AT OMEGA WHICH MUST BE OBTAINED FIRST (USE
C        SPLINE9 FOR THAT PURPOSE).  TEMP IS THE RECIPROCAL
C        TEMPERATURE IN CM-1 UNITS.
C        NOTE THAT WE INTERPOLATE 1.D60 TIMES THE LOGARITHM
C        OF PHI(OMEGA).
C
      IMPLICIT double precision (A-H,O-Z)
C
      DIMENSION PHI(N),PHI2(N),OMEGA(N)
c **  replaced F and GP with F(1) and GP(1) through this function
c **  or compiler complains about Rank-1 scalar mismatch
      DIMENSION F(1),GP(1)
C
      TFAC=0.D0
      F(1)=FREQ
      IF (F(1)) 10,20,20
 10   F(1)=DABS(F(1))
      TFAC=(-RTEMP*F(1))
 20   IF (F(1).LT.OMEGA(N)) GO TO 30
      SPCFCT=DEXP(-(PHI(N-1)-PHI(N))*(F(1)-OMEGA(N))/
     $ (OMEGA(N)-OMEGA(N-1))+PHI(N)+TFAC)
      RETURN
 30   CALL IXPOLT(N,1,0,1.D-6,OMEGA,PHI,F,GP,SI,NR,PHI2)
      SPCFCT=DEXP(TFAC+GP(1))
      RETURN
      END

      SUBROUTINE SPLINE9(L,M,K,EPS,X,Y,T,SS,SI,NR,S2)
C        SPLINE9 INTERPOLATION AND QUADRATURE, THIRD ORDER
C        AFTER GREVILLE.  INPUT ARGUMENTS L...Y, OUTPUT SS...NR.
C        L DATA POINTS X(1),Y(1)...X(L),Y(L)
C        EPS=ERROR CRITERION, TYPICALLY EPS=1.D-5 FOR 5 DECIMAL
C        PLACES ACCURACY.
C        M ARGUMENTS T(1)...T(M) FOR WHICH FUNCTION VALUES
C         SS(1)...SS(M), FOR K=0, OR FIRST OR SECOND DERIVATIVE FOR
C         K=1 OR -1, RESPECTIVELY.  NOTE THAT M HAS TO BE AT LEAST
C         EQUAL TO 1.
C        SI=INTEGRAL (OVER WHOLE INTERVAL) FOR K=2 ONLY.
C        FOR "NATURAL" SPLINE9 FUNCTIONS, S2(1)=S2(L)=0. MUST BE
C         INPUT *NOTE*
C        N0 INDICATES THE NUMBER OF OUT-OF-RANGE CALLS.
C         X(1)<T(I)<X(L) EXTRAPOLATE WITH CAUTION; ASSUMPTION IS
C         D2Y/DX2 = 0.
C        S2(I) IS THE 2ND DERIVATIVE AT X=X(I) AND IS COMPUTED
C         INTERNALLY.
C
      IMPLICIT double precision (A-H,O-Z)
C
      DIMENSION X(L),Y(L),T(M),SS(M),S2(L)
      DELY(I)=(Y(I+1)-Y(I))/(X(I+1)-X(I))
      B(I)=(X(I)-X(I-1))*0.5D0/(X(I+1)-X(I-1))
      C(I)=3.D0*(DELY(I)-DELY(I-1))/(X(I+1)-X(I-1))
      N=L
      N1=N-1
      NR=0
 4    DO 52 I=2,N1
 52   S2(I)=C(I)/1.5D0
      OMEGA=1.0717968D0
      IC=0
C        "NATURAL" SPLINE FUNCTIONS OF THIRD ORDER.
      S2(N)=0.D0
      S2(1)=0.D0
 5    ETA=0.D0
      IC=IC+1
      SM=DABS(S2(1))
      DO 25 I=2,N
      IF (DABS(S2(I)).GT.SM) SM=DABS(S2(I))
 25   CONTINUE
      EPSI=EPS*SM
 6    DO 10 I=2,N1
 7    W=(C(I)-B(I)*S2(I-1)-(0.5D0-B(I))*S2(I+1)-S2(I))*OMEGA
 8    IF (DABS(W)-ETA) 10,10,9
 9    ETA=DABS(W)
 10   S2(I)=S2(I)+W
 13   IF (ETA-EPSI) 14,5,5
      ENTRY IXPOLT(L,M,K,EPS,X,Y,T,SS,SI,NR,S2)
C       THIS ENTRY USEFUL WHEN ITERATION PREVIOUSLY COMPLETED
      N=L
      N1=N-1
      NR=0
      IC=-1
 14   IF (K-2) 15,20,15
 15   DO 61 J=1,M
 16   I=1
 54   IF (T(J)-X(1)) 58,17,55
 55   IF (T(J)-X(N)) 57,59,158
 56   IF (T(J)-X(I)) 60,17,57
 57   I=I+1
      GO TO 56
 58   NR=NR+1
      HT1=T(J)-X(1)
      HT2=T(J)-X(2)
      YP1=DELY(1)+(X(1)-X(2))*(2.D0*S2(1)+S2(2))/6.D0
      IF (K) 72,70,71
 71   SS(J)=YP1+HT1*S2(1)
      GO TO 61
 70   SS(J)=Y(1)+YP1*HT1+S2(1)*HT1*HT1/2.D0
      GO TO 61
 72   SS(J)=S2(I)
      GO TO 61
 158  HT2=T(J)-X(N)
      HT1=T(J)-X(N1)
      NR=NR+1
      YPN=DELY(N1)+(X(N)-X(N1))*(S2(N1)+2.D0*S2(N))/6.D0
      IF (K) 82,80,81
 81   SS(J)=YPN+HT2*S2(N)
      GO TO 61
 80   SS(J)=Y(N)+YPN*HT2+S2(N)*HT2*HT2/2.D0
      GO TO 61
 82   SS(J)=S2(N)
      GO TO 61
 59   I=N
 60   I=I-1
C
 17   HT1=T(J)-X(I)
      HT2=T(J)-X(I+1)
      PROD=HT1*HT2
      S3=(S2(I+1)-S2(I))/(X(I+1)-X(I))
      SS2=S2(I)+HT1*S3
      DELSQS=(S2(I)+S2(I+1)+SS2)/6.D0
      IF (K) 43,41,42
 41   SS(J)=Y(I)+HT1*DELY(I)+PROD*DELSQS
      GO TO 61
 42   SS(J)=DELY(I)+(HT1+HT2)*DELSQS+PROD*S3/6.D0
      GO TO 61
 43   SS(J)=SS2
 61   CONTINUE
 20   SI=0.D0
      DO 62 I=1,N1
      H=X(I+1)-X(I)
 62   SI=SI+0.5D0*H*(Y(I)+Y(I+1))-H**3*(S2(I)+S2(I+1))/24.D0
      IF (K.EQ.2) NR=IC
      RETURN
      END

C ******************************************************************
      SUBROUTINE BND32(TEMP,RSI,NSOL)
C
      IMPLICIT double precision (A-H,O-Z)
C
      DIMENSION EB(2,9),A(9,9),RSI(201)
C
C        EB(I,K) - BOUND ENERGIES FOR VIBRATIONAL NUMBER V = I - 1
C         ROTATION NUMBER J=K-1
C        A(I,J,K)=( C(I,L,J)**2) * (MTX. EL. (I,BETA,J)**2)
C        I,J- DENOTE ROTATIONAL STATES FOR VIB. LEVEL V=0
C
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      COMMON/BL3/RSIBB(401)
C
C
C        BOUND ENERGIES FOR THE H2-CH4 "HK" POTENTIAL
C        DESCRIBED IN BORYSOW AND FROMMHOLD (1985) TABLE 3
      DATA (EB(1,J),J=1,9)/-26.1308D0,-24.9681D0,-22.6532D0,
     $ -19.2080D0,-14.669D0,-9.0915D0,-2.5640D0,4.7286D0,12.4947D0/
      DATA (EB(2,J),J=1,9)/-0.516D0,-0.1246D0,7*0.D0/
C
      DATA TWOPIC/1.88365183D11/
C

C      NSRI=190
C        NSRI - HOW MANY POINTS FOR A B-B SPECTRAL FUNCTION TO BE GIVEN
C changed to 200 (maximum), C.Nixon
      NSRI = 200

C      WNRMX3=25.D0
C        WNRMX3 - FREQUENCY RANGE OF B-B CONTRIBUTION
C        SLIT - HALFWIDTH OF THE SPECTRAL PROFILE CONVOLUTED WITH
C         THE B-B SPECTRUM, IN CM-1.
C changed to allow variable slit width, C.Nixon
      WNRMX3 = 22.5 + SLIT

C
      NSRIUP=2*NSRI+1
      DX=WNRMX3/DFLOAT(NSRI)
C n.b. DX_min is 22.5/200 = 0.11 cm-1

      DO 300 I=1,401
 300  RSIBB(I)=0.D0
      NS=INT(SLIT/DX)
      DO 100 I=1,9
      DO 100 J=1,9
 100  A(I,J)=0.D0
C
C        A(I,J) FOR L=32 CONTRIBUTION H2-CH4 SYSTEM
C         THESE MATRIX ELEMENTS FROM TABLE 5 OF BORYSOW AND FROMMHOLD
      A(1,4)=.14127D-39
      A(2,3)=.18414D-39
      A(2,5)=.23414D-39
      A(3,4)=.18534D-39
      A(3,6)=.30894D-39
      A(4,5)=.21745D-39
      A(4,7)=.36564D-39
      A(5,6)=.24659D-39
      A(5,8)=.40032D-39
      A(6,7)=.26656D-39
      A(7,8)=.27376D-39
      A(8,9)=.26805D-39
      A(6,9)=.41233D-39
C
      ALFA=1.D0/(0.69519D0*TEMP)
      RM=1.7768D0*1.672649D-24
      PI=3.141592654D0
      PF=((RM*(1.380662D-16)*TEMP*2.D0*PI/(6.626176D-27)**2)**1.5D0)
C        SCALE DOWN PF VALUE BY 10**60
      PF=1.D-60*PF
C
C        DELTA V = 0 BELOW
C
      DO 10 L=1,8
      STOKE1=EB(1,L+1)-EB(1,L)
C        FREQUENCY SHIFT FOR DELTA J = +1, DELTA V = 0
      IF (L.GT.6) GO TO 20
      STOKE3=EB(1,L+3)-EB(1,L)
C        STOKE3- FREQUENCY SHIFT FOR DELTA J = +3, DELTA V = 0
      STOKI= A(L,L+3)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE3,STOKI)
      STOKIP=A(L,L+3)*DEXP(-ALFA*EB(1,L+3))/PF
      CALL PROFIL(STOKE3,STOKIP)
 20   STOKI=A(L,L+1)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE1,STOKI)
      STOKIP=A(L,L+1)*DEXP(-ALFA*EB(1,L+1))/PF
      CALL PROFIL(STOKE1,STOKIP)
 10   CONTINUE
C
C        DELTA V=1 BELOW
      AV1=.39933D-41
      STOKE=22.5287D0
      STOKI=AV1*DEXP(-ALFA*EB(1,3))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,2))/PF
 99   FORMAT(10X,3F12.5,2E12.4)
 67   FORMAT(2I5,3F12.5,2E12.4)
      CALL PROFIL(STOKE,STOKIP)
C
      AV1=0.3079D-41
      STOKE=18.6921D0
      STOKI=AV1*DEXP(-ALFA*EB(1,4))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,1))/PF
      CALL PROFIL(STOKE,STOKIP)
C
C
      AV1=0.4281D-41
      STOKE=14.544D0
      STOKI=AV1*DEXP(-ALFA*EB(1,5))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,2))/PF
      CALL PROFIL(STOKE,STOKIP)
C
      DO 90 N=1,NSRIUP
 90   RSIBB(N)=RSIBB(N)/TWOPIC/SLIT
C
      NSOL=NSRI+1
      NSOL2=NSOL+1
      DO 22 I=1,NSOL
 22   RSI(I)=RSIBB(NSOL2-I)
c       WRITE (6,6655) (RSI(I),I=1,NSOL)
C        RSI - BOUND-BOUND CONTRIBUTION FOR POSITIVE FREQUENCY SHIFTS
C 6655 FORMAT (1X,(10(1X,1PE10.3),/))
C
      RETURN
      END

C *******************************************************************
      SUBROUTINE BND43(TEMP,RSI,NSOL)
C
      IMPLICIT double precision (A-H,O-Z)
C
      DIMENSION EB(2,9),A(9,9),RSI(201)
C
C        EB(I,K) - BOUND ENERGIES FOR VIBRATIONAL NUMBER V = I - 1
C         ROTATION NUMBER J=K-1
C        A(I,J,K)=( C(I,L,J)**2) * (MTX. EL. (I,BETA,J)**2)
C        I,J- DENOTE ROTATIONAL STATES FOR VIB. LEVEL V=0
C
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      COMMON/BL3/RSIBB(401)
      COMMON/BOU43/INITB
C
C
      DATA (EB(1,J),J=1,9)/-26.1308D0,-24.9681D0,-22.6532D0,
     $ -19.2080D0,-14.669D0,-9.0915D0,-2.5640D0,4.7286D0,12.4947D0/
      DATA (EB(2,J),J=1,9)/-0.516D0,-0.1246D0,7*0.D0/
C
      DATA TWOPIC/1.88365183D11/
C
C      NSRI=190
C        NSRI - HOW MANY POINTS FOR A B-B SPECTRAL FUNCTION TO BE GIVEN
C     Changed to 200 (max) by C.Nixon
      NSRI = 200

C      WNRMX3=30.D0
C        WNRMX3 - FREQUENCY RANGE OF B-B CONTRIBUTION
C        SLIT - HALFWIDTH OF THE SPECTRAL PROFILE CONVOLUTED WITH
C         THE B-B SPECTRUM, IN CM-1.
C
C changed to allow for variable slit width, C.Nixon
C (n.b. WNRMAX is the max Delta_E (see table 5 of Borysow and 
C Frommhold 1986 (ap.J. 304, 849)
      WNRMX3 = 27.16 + SLIT

      NSRIUP=2*NSRI+1
      DX=WNRMX3/DFLOAT(NSRI)
C n.b. the minimum DX is 27.16/200 = 0.14 cm-1
 
      DO 300 I=1,401
 300  RSIBB(I)=0.D0
      NS=INT(SLIT/DX)
      DO 100 I=1,9
      DO 100 J=1,9
 100  A(I,J)=0.D0
C
C        A(I,J) FOR L=43 CONTRIBUTION H2-CH4 SYSTEM
C        MATRIX ELEMENTS AS IF M(LL*)/7
      A(1,5)=.33038D-41
      A(2,4)=.45246D-41
      A(2,6)=.52213D-41
      A(3,5)=.42125D-41
      A(3,7)=.65899D-41
      A(4,6)=.46727D-41
      A(4,8)=.74203D-41
      A(5,7)=.50413D-41
      A(5,9)=.77286D-41
      A(6,8)=.51657D-41
      A(7,9)=.50297D-41
C
      ALFA=1.D0/(0.69519D0*TEMP)
      RM=1.7768D0*1.672649D-24
      PI=3.141592654D0
      PF=((RM*(1.380662D-16)*TEMP*2.D0*PI/(6.626176D-27)**2)**1.5D0)
C        SCALE DOWN PF VALUE BY 10**60
      PF=1.D-60*PF
C
C        DELTA V = 0 BELOW
C
      DO 10 L=1,7
      STOKE1=EB(1,L+2)-EB(1,L)
C        FREQUENCY SHIFT FOR DELTA J = +2, DELTA V = 0
      IF (L.GT.5) GO TO 20
      STOKE3=EB(1,L+4)-EB(1,L)
C        FREQUENCY SHIFT FOR DELTA J = +4, DELTA V = 0
      STOKI= A(L,L+4)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE3,STOKI)
      STOKIP=A(L,L+4)*DEXP(-ALFA*EB(1,L+4))/PF
      CALL PROFIL(STOKE3,STOKIP)
 20   STOKI=A(L,L+2)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE1,STOKI)
      STOKIP=A(L,L+2)*DEXP(-ALFA*EB(1,L+2))/PF
      CALL PROFIL(STOKE1,STOKIP)
 10   CONTINUE
C
C        DELTA V=1 BELOW
      AV1=.12153D-42
      STOKE=19.0835D0
      STOKI=AV1*DEXP(-ALFA*EB(1,4))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,2))/PF
 99   FORMAT(10X,3F12.5,2E12.4)
 67   FORMAT(2I5,3F12.5,2E12.4)
      CALL PROFIL(STOKE,STOKIP)
C
      AV1=0.89592D-43
      STOKE=14.1528D0
      STOKI=AV1*DEXP(-ALFA*EB(1,5))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,1))/PF
      CALL PROFIL(STOKE,STOKIP)
C
      AV1=0.1182D-42
      STOKE=8.9669D0
      STOKI=AV1*DEXP(-ALFA*EB(1,6))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,2))/PF
      CALL PROFIL(STOKE,STOKIP)
C
      DO 90 N=1,NSRIUP
 90   RSIBB(N)=RSIBB(N)/TWOPIC/SLIT
C
      NSOL=NSRI+1
      NSOL2=NSOL+1
      DO 22 I=1,NSOL
 22   RSI(I)=RSIBB(NSOL2-I)
C        RSI - BOUND-BOUND CONTRIBUTION FOR POSITIVE FREQUENCY SHIFTS

      RETURN
      END

C******************************************************************
      SUBROUTINE BND54C(TEMP,RSI,NSOL)
C
      IMPLICIT double precision (A-H,O-Z)
C
      DIMENSION EB(2,9),A(9,9),RSI(201)
C
C        EB(I,K) - BOUND ENERGIES FOR VIBRATIONAL NUMBER V = I - 1
C         ROTATION NUMBER J=K-1
C        A(I,J,K)=( C(I,L,J)**2) * (MTX. EL. (I,BETA,J)**2)
C        I,J- DENOTE ROTATIONAL STATES FOR VIB. LEVEL V=0
C
      COMMON/APP3/SLIT,DX,WNRMX3,NSRI,NS,NSRIUP
      COMMON/BL3/RSIBB(401)
C
C
      DATA (EB(1,J),J=1,9)/-26.1308D0,-24.9681D0,-22.6532D0,
     $ -19.2080D0,-14.669D0,-9.0915D0,-2.5640D0,4.7286D0,12.4947D0/
      DATA (EB(2,J),J=1,9)/-0.516D0,-0.1246D0,7*0.D0/
C
      DATA TWOPIC/1.88365183D11/
C
      NSRI=190
C        NSRI - HOW MANY POINTS FOR A B-B SPECTRAL FUNCTION TO BE GIVEN
C changed to 200 (max) C.Nixon
      NSRI = 200

C      WNRMX3=34.D0
C        WNRMX3 - FREQUENCY RANGE OF B-B CONTRIBUTION
C        SLIT - HALFWIDTH OF THE SPECTRAL PROFILE CONVOLUTED WITH
C         THE B-B SPECTRUM, IN CM-1.
C
C Changed to allow for variable slit width, C. Nixon
      WNRMX3 = 31.7 + SLIT

      NSRIUP=2*NSRI+1
      DX=WNRMX3/DFLOAT(NSRI)
C note the minimum DX = 31.7 / 200 = 0.16 cm-1

      DO 300 I=1,401
 300  RSIBB(I)=0.D0
      NS=INT(SLIT/DX)
      DO 100 I=1,9
      DO 100 J=1,9
 100  A(I,J)=0.D0
C
C        A(I,J) FOR L=54 CONTRIBUTION H2-CH4 SYSTEM
C        MATRIX ELEMENTS AS IF M(LL*)/9
      A(1,6)=.99184D-42
      A(2,5)=.14168D-41
      A(2,7)=.14969D-41
      A(3,4)=.16093D-41
      A(3,6)=.12455D-41
      A(4,5)=.12587D-41
      A(4,7)=.13120D-41
      A(5,6)=.12714D-41
      A(5,8)=.13379D-41
      A(6,7)=.12818D-41
      A(7,8)=.12378D-41
      A(6,9)=.12963D-41
      A(8,9)=.11352D-41
      A(3,8)=.17927D-41
      A(4,9)=.19144D-41
C
      ALFA=1.D0/(0.69519D0*TEMP)
      RM=1.7768D0*1.6726449D-24
      PI=3.141592654D0
      PF=((RM*(1.380662D-16)*TEMP*2.D0*PI/(6.626176D-27)**2)**1.5D0)
C        SCALE DOWN PF VALUE BY 10**60
      PF=1.D-60*PF
C
C        DELTA V = 0 BELOW
C
      DO 10 L=1,8
      STOKE1=EB(1,L+1)-EB(1,L)
C        FREQUENCY SHIFT FOR DELTA J = +1, DELTA V = 0
      IF (L.GT.6) GO TO 20
      STOKE3=EB(1,L+3)-EB(1,L)
C        FREQUENCY SHIFT FOR DELTA J = +3, DELTA V = 0
      IF (L.GT.4) GO TO 33
      STOKE5=EB(1,L+5)- EB(1,L)
      STOKI= A(L,L+5)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE5,STOKI)
      STOKIP=A(L,L+5)*DEXP(-ALFA*EB(1,L+5))/PF
      CALL PROFIL(STOKE5,STOKIP)
 33   STOKI=A(L,L+3)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE3,STOKI)
      STOKIP=A(L,L+3)*DEXP(-ALFA*EB(1,L+3))/PF
      CALL PROFIL(STOKE3,STOKIP)
 20   STOKI=A(L,L+1)*DEXP(-ALFA*EB(1,L))/PF
      CALL PROFIL(-STOKE1,STOKI)
      STOKIP=A(L,L+1)*DEXP(-ALFA*EB(1,L+1))/PF
      CALL PROFIL(STOKE1,STOKIP)
 10   CONTINUE
C
C        DELTA V=1 BELOW
      AV1=.45814D-43
      STOKE=14.5442D0
      STOKI=AV1*DEXP(-ALFA*EB(1,5))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,2))/PF
 99   FORMAT(10X,3F12.5,2E12.4)
 67   FORMAT(2I5,3F12.5,2E12.4)
      CALL PROFIL(STOKE,STOKIP)
C
      AV1=0.32581D-43
      STOKE=8.5755D0
      STOKI=AV1*DEXP(-ALFA*EB(1,6))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,1))/PF
      CALL PROFIL(STOKE,STOKIP)
C
      AV1=0.41005D-43
      STOKE=2.4395D0
      STOKI=AV1*DEXP(-ALFA*EB(1,7))/PF
      CALL PROFIL(-STOKE,STOKI)
      STOKIP=AV1*DEXP(-ALFA*EB(2,2))/PF
      CALL PROFIL(STOKE,STOKIP)
C
      DO 90 N=1,NSRIUP
 90   RSIBB(N)=RSIBB(N)/TWOPIC/SLIT
C
      NSOL=NSRI+1
      NSOL2=NSOL+1
      DO 22 I=1,NSOL
 22   RSI(I)=RSIBB(NSOL2-I)
C        RSI - BOUND-BOUND CONTRIBUTION FOR POSITIVE FREQUENCY SHIFTS

      RETURN
      END

      DOUBLE PRECISION FUNCTION BGAUS(FNU,G0,DELTA,OMEGA0,TEMP)
C
C        THIS IS DESYMMETRIZED GAUSSIAN PROFILE, G0 IS A ZEROTH MOMENT
C        FNU, DELTA, AND OMEGA0 ARE IN CM-1
C        C0 IN CGS
C
      IMPLICIT double precision (A-H,O-Z)
C
      DATA BKW,TWOPI /0.6950304256D0,6.2831853D0/
      D=G0/(DELTA*DSQRT(TWOPI))
      DESYM=2.D0/(1.D0+DEXP(-FNU/(BKW*TEMP)))
      FEXP=(FNU-OMEGA0)**2/(2.D0*DELTA**2)
C     FEXP=DMIN1(FEXP,160.D0)
      FEXP=DMIN1(FEXP,60.D0)
      BGAUS=D * DESYM * DEXP(-FEXP)
      RETURN
      END
