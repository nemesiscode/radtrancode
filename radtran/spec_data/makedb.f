      PROGRAM MAKEDB
C     SCCS Identifier = @(#)makedb.f	3.3 5/15/96
C--------------------------------------------------------------
C_TITLE:  MAKEDB: create line data base file, key file  and index file
C
C_KEYS:   PROG,LINEDATA
C
C_DESCR:  copies line data bases (eg HITRAN or GEISA) from file as copied
C         from tape into direct access file containing one transition per
C         record. The records are in FORTRAN character format as in the
C         original data base. Conversion to ASCII from EBCDIC is allowed.
C         An index file is produced consiting of one record corresponding to
C         each record (transition) in the data base. This record contains a
C         pointer to the data base record holding the next transition for this
C         species (of any isotope)
C         The program also produces a key file summarising the following
C         information:
C            -the name of the data base file
C            -the name of the index file
C            -the name of the file describing the gases known to the software
C            -the name of the file containing the translation between isotope
C             identifiers in the data base and local ones
C         Thus only this key file has to be specified to identify the data base
C
C_FILES :
C         unit 2 - key file, index file, gas file and isotope file
C         unit 3 - input file as read from tape
C         unit 4 - output direct access file
C
C_CALLS:  EBCASC   converts a character string from EBCDIC to ascii
C         RDGAS    reads in the gas file information
C         RDISO    reads in the isotope file information
C         RDLINE   reads line data from buffer
C         ASKYN    prompts user for yes/no answer
C         WTEXT    writes test to screen
C         PROMPT   prompts user for input
C         FILE     sets file extension in text string
C
C_BUGS:   to maintain transportability the common blocks holding the data
C         base information AND the data on the single current transition
C         (for example when reading a line) are not stored in include files
C         The common blocks defined below are exhaustive and are used as the
C         master copy for other routines
C
C_HIST:
C         4feb91 SBC Original version
C	 22mar95 PGJI Tidied up and made more friendly
C_END:
C--------------------------------------------------------------
      INCLUDE '../includes/dbcom.f' 
C--------------------------------------------------------------
C
      INTEGER ISYS
      CHARACTER*10000 BUFFER
      INTEGER IPREC,IPRECL,NTRAN,I,J,K,POINT(MAXDGAS),REC,BUFSIZ,OPUNIT
      LOGICAL EBCDIC,ASKYN,CC,OLDFIL
      CHARACTER*100 TMPFIL,DIRNAM
      CHARACTER*1 ANS
      DATA OLDFIL /.FALSE./
      CALL WTEXT(
     1'Enter ABSOLUTE name of original line data file')
      CALL PROMPT('? : ')
      READ(*,10)IPFILE
      DIRNAM=IPFILE
      DO I=LEN(DIRNAM),1,-1
         IF (DIRNAM(I:I) .EQ. '/') GO TO 11
         DIRNAM(I:I) = ' '
      END DO
 11   CONTINUE
 10   FORMAT(A)
      CALL PROMPT('Enter name of new data base : ')
      READ(*,10)DBNAME
      KEYFIL=DIRNAM
      INDFIL=DIRNAM
      DO J=1,LEN(DBNAME)
         KEYFIL(I+J:I+J)=DBNAME(J:J)
         INDFIL(I+J:I+J)=DBNAME(J:J)
      END DO
      CALL WTEXT(
     1'Enter record length of input file. [bytes]')
      CALL WTEXT('For example, for the original data tapes 
     1HITRAN=5100, GEISA=6160')
      CALL WTEXT(
     1'for subsets generated by Select, HITRAN=100, GEISA = 80, 120')
      CALL PROMPT('? :')
      READ(*,*)IPRECL
      CALL PROMPT(
     1'record length of output file? [eg 100 HITRAN, 80, 120 GEISA]')
      READ(*,*)DBRECL
      CC=ASKYN('is the file sequential access?')
C     NTRAN is the number of transitions per input record
      NTRAN=IPRECL/DBRECL
      BUFSIZ=NTRAN*DBRECL
      IF(CC)THEN
C       GEISA files normally include carriage control and can be read
C       sequentially
        OPEN(UNIT=3,FILE=IPFILE,STATUS='OLD',ERR=900,
     1  ACCESS='SEQUENTIAL')
C       READONLY keyword above not F77
      ELSE
C       HITRAN files are fixed length 5100 byte records and are opened as
C       direct under Unix
        OPEN(UNIT=3,FILE=IPFILE,STATUS='OLD',ERR=900,
     1  ACCESS='DIRECT',RECL=IPRECL,FORM='FORMATTED')
        IF(NTRAN.EQ.1)OLDFIL=ASKYN('use the old file as the database?')
      END IF

      IF(OLDFIL)THEN
        DBFILE=IPFILE
      ELSE
	  CALL PROMPT('Enter desired directory of database : ')
	  READ(*,10)DIRNAM
	  IL=-1
	  DO J=1,100
		IF(DIRNAM(J:J).NE.' ')IL=J
  	  END DO
	  IN = LEN(DBNAME)
	  IL=IL+1
	  IF(IL.NE.0)THEN
             DIRNAM(IL:IL)='/'
	  END IF
  	  IL=IL+1
          DIRNAM(IL:IL+IN-1)=DBNAME
          CALL FILE(DIRNAM,DBFILE,'asc')
          OPEN(UNIT=4,FILE=DBFILE,STATUS='UNKNOWN',ACCESS='DIRECT',
     1    RECL=DBRECL,FORM='FORMATTED')
      END IF
  
      CALL FILE(DIRNAM,KEYFIL,'key')
      
      CALL FILE(DIRNAM,INDFIL,'ind')

      GASFIL='/home/oxpln98/plan/teanby/linedata/lib/gasinfo96.dat'

      CALL WTEXT('Enter ABSOLUTE name of gas file')
      WRITE (*,223) GASFIL
223   FORMAT(' ','Default = ',A60) 
      CALL PROMPT(':')
      READ(*,10)TMPFIL
      IF(TMPFIL.NE.' ')GASFIL=TMPFIL
      DBLUN=2
      CALL RDGAS

      IF(DBRECL.EQ.100)THEN
        ISOFIL='/home/oxpln98/plan/teanby/linedata/lib/isotopes_h96.dat'
        DBFORM=0
      ELSEIF(DBRECL.EQ.112)THEN
        ISOFIL='/home/oxpln98/plan/teanby/linedata/lib/isotopes_h96.dat'
        DBFORM=0
      ELSEIF(DBRECL.EQ.160)THEN
        ISOFIL='/home/oxpln98/plan/teanby/linedata/lib/isotopes_h2k.dat'
        DBFORM=0
      ELSEIF(DBRECL.EQ.52)THEN
        ISOFIL='/home/oxpln98/plan/teanby/linedata/lib/isotopes_h2k.dat'
        DBFORM=0
      ELSE
        ISOFIL='/home/oxpln98/plan/teanby/linedata/lib/isotopes_g97.dat'
        DBFORM=1
      END IF
      

      CALL WTEXT('Enter ABSOLUTE name of isotope file')
      WRITE(*,223)ISOFIL
      CALL PROMPT(':')
      READ(*,10)TMPFIL
      IF (TMPFIL.NE.' ')ISOFIL=TMPFIL
      CALL RDISO
      EBCDIC=ASKYN('translate from EBCDIC?')
      INDRL=ISYS()


      WRITE(6,10)DBNAME
      WRITE(6,10)KEYFIL
      WRITE(6,10)IPFILE
      WRITE(6,10)DBFILE
      WRITE(6,10)INDFIL
      WRITE(6,10)GASFIL
      WRITE(6,10)ISOFIL

      CALL PROMPT('OK? (Y/N) : ')
      READ(5,10)ANS

      IF(ANS.EQ.'n'.OR.ANS.EQ.'N')STOP
C
C     creating the key file
      OPEN(UNIT=2,FILE=KEYFIL,STATUS='UNKNOWN')
      WRITE(2,26)DBNAME
      WRITE(2,20)KEYFIL
      WRITE(2,21)IPFILE
      WRITE(2,22)DBFILE
      WRITE(2,23)INDFIL
      WRITE(2,24)GASFIL
      WRITE(2,25)ISOFIL
      WRITE(*,20)KEYFIL
      WRITE(*,21)IPFILE
      WRITE(*,22)DBFILE
      WRITE(*,23)INDFIL
      WRITE(*,24)GASFIL
      WRITE(*,25)ISOFIL
20    FORMAT(A)
21    FORMAT(A)
22    FORMAT(A)
23    FORMAT(A)
24    FORMAT(A)
25    FORMAT(A)
26    FORMAT(A)
C
      IF(OLDFIL)THEN
C       just need to find size of data base
        I=10000
        DBSIZ=300000
150     DBSIZ=DBSIZ+I
        READ(3,120,REC=DBSIZ,ERR=140)BUFFER(1:BUFSIZ)
        GOTO 150
140     CONTINUE
        DBSIZ=DBSIZ-I
C       closing and opening file because no standard way to clear io error
C       on Sun
        CLOSE(3)
        OPEN(UNIT=3,FILE=IPFILE,STATUS='OLD',
     1  ACCESS='DIRECT',RECL=IPRECL,FORM='FORMATTED')
        IF(I.GT.1)THEN
          I=I/2
          GOTO 150
          END IF
        OPUNIT=3
       ELSE
C       creating the data base
        WRITE(*,202)
202     FORMAT(' creating the new data base')
        DBSIZ=0
        IPREC=0
100     IPREC=IPREC+1
        IF(CC)THEN
          READ(3,120,END=130)BUFFER(1:BUFSIZ)
         ELSE
          READ(3,120,REC=IPREC,ERR=130)BUFFER(1:BUFSIZ)
          END IF
        IF(EBCDIC)CALL EBCASC(BUFFER(1:BUFSIZ))
        DO 110 I=1,NTRAN
        DBSIZ=DBSIZ+1
        J=1+(I-1)*DBRECL
        K=I*DBRECL
        WRITE(4,120,REC=DBSIZ)BUFFER(J:K)
120     FORMAT(A)
110     CONTINUE
        GOTO 100
130     CONTINUE
        WRITE(*,131)DBSIZ
131     FORMAT(' written',I8,' records')
        OPUNIT=4
        END IF
C


C     creating the index file
      WRITE(*,201)
201   FORMAT(' creating the index file')
      OPEN(UNIT=1,FILE=INDFIL,STATUS='UNKNOWN',ACCESS='DIRECT',
     1RECL=INDRL,FORM='UNFORMATTED')
      DO 30 I=1,MAXDGAS
      POINT(I)=0
30    CONTINUE
      J=DBSIZ
      DO 31 REC=J,1,-1
      READ(OPUNIT,120,REC=REC)BUFFER(:DBRECL)
C     adopting convention locally that a leading # indicates header
      IF(BUFFER(2:2).EQ.'#'.OR.BUFFER(1:1).EQ.'#')GOTO 31
      CALL RDLINE(BUFFER)
C      print*,REC,LNID,LOCID(LNID)
      IF(LNID.LT.1.AND.REC.EQ.DBSIZ)THEN
        DBSIZ=REC-1
        GOTO 31
        END IF
      WRITE(1,REC=REC)POINT(LOCID(LNID))
      POINT(LOCID(LNID))=REC
31    CONTINUE
C
      WRITE(*,203)DBSIZ
203   FORMAT(I11,' records actually contain lines or comments')
      WRITE(2,132)DBSIZ
132   FORMAT(1X,I10,26X,'  number of records')
      WRITE(2,134)DBFORM
134   FORMAT(1X,I10,26X,'  record format type [eg 0=HITRAN]')
      WRITE(2,133)INDRL
133   FORMAT(1X,I10,26X,'  record length of index file')
      WRITE(2,135)DBRECL
135   FORMAT(1X,I10,26X,'  record length of data base')
C
      STOP
C-------------------------
C     error traps
900   WRITE(*,901)
901   FORMAT(' unable to open original database file')
      STOP
      END
