      PROGRAM MAKEDBLOOP
C     $Id:
C--------------------------------------------------------------
C_TITLE:  MAKEDBLOOP: create line data base file, key file  and index file
C
C_KEYS:   PROG,LINEDATA
C
C_DESCR:  copies line data bases (eg HITRAN or GEISA) from file as copied
C         from tape into direct access file containing one transition per
C         record. The records are in FORTRAN character format as in the
C         original data base.
C         An index file is produced consiting of one record corresponding to
C         each record (transition) in the data base. This record contains a
C         pointer to the data base record holding the next transition for this
C         species (of any isotope)
C         The program also produces a key file summarising the following
C         information:
C            -the name of the data base file
C            -the name of the index file
C            -the name of the file describing the gases known to the software
C            -the name of the file containing the translation between isotope
C             identifiers in the data base and local ones
C         Thus only this key file has to be specified to identify the data base
C
C_FILES :
C         unit 2 - key file, index file, gas file and isotope file
C         unit 3 - input file as read from tape
C         unit 4 - output direct access file
C
C_CALLS:  RDGAS    reads in the gas file information
C         RDISO    reads in the isotope file information
C         RDLINE   reads line data from buffer
C         ASKYN    prompts user for yes/no answer
C         WTEXT    writes test to screen
C         PROMPT   prompts user for input
C         FILE     sets file extension in text string
C
C_BUGS:   to maintain transportability the common blocks holding the data
C         base information AND the data on the single current transition
C         (for example when reading a line) are not stored in include files
C         The common blocks defined below are exhaustive and are used as the
C         master copy for other routines
C
C_HIST:
C         4feb91 SBC  Original version
C	 22mar95 PGJI Tidied up and made more friendly
C	  9jun10 PGJI Modified from MAKEDB to run over a range of input
C                     files (assumed generated from SELECTTEMPLOOP)
C_END:
C--------------------------------------------------------------
      INCLUDE '../includes/dbcom.f' 
C--------------------------------------------------------------
C
      INTEGER ISYS
      CHARACTER*10000 BUFFER
      INTEGER IPREC,IPRECL,NTRAN,I,J,K,POINT(MAXDGAS),REC,BUFSIZ,OPUNIT
      INTEGER IL
      LOGICAL ASKYN
      CHARACTER*128 TMPFIL,DIRNAM,DBNAME1
      CHARACTER*1 ANS


      CALL WTEXT(
     1'Enter absolute rootname of input line data files')
      CALL PROMPT('? : ')
      READ(*,10)IPFILE
 10   FORMAT(A)

      CALL WTEXT(
     1'Enter directory name of output files')
      CALL PROMPT('? : ')
      READ(*,10)DIRNAM
      DO IL=LEN(DIRNAM),1,-1
         IF (DIRNAM(IL:IL) .EQ. '/') GO TO 11
         DIRNAM(IL:IL) = ' '
      END DO
 11   CONTINUE

      DO I=1,LEN(IPFILE)
       IF(IPFILE(I:I).NE.' ')JIP=I
      ENDDO
      write(6,10)DIRNAM
      write(6,10)IPFILE

      CALL PROMPT('Enter name of new data base : ')
      READ(*,10)DBNAME1

      DO I=1,LEN(DBNAME1)
       IF(DBNAME1(I:I).NE.' ')JD=I
      ENDDO
      

      CALL WTEXT(
     1'Enter record length of input file. [bytes]')
      CALL WTEXT('For example, for the original data tapes 
     1HITRAN=5100, GEISA=6160')
      CALL WTEXT(
     1'for subsets generated by Select, HITRAN=100,120,160, 
     1 GEISA = 80, 120')
      CALL PROMPT('? :')
      READ(*,*)IPRECL
      CALL PROMPT(
     1'record length of output file? [eg 100,120,160 HITRAN, 
     280, 120 GEISA]')
      READ(*,*)DBRECL

      NTRAN=IPRECL/DBRECL
      BUFSIZ=NTRAN*DBRECL


      GASFIL='/home/oxpln99/plan/jaemin/gasinfoexo.dat'
      CALL WTEXT('Enter ABSOLUTE name of gas file')
      WRITE (*,223) GASFIL
223   FORMAT(' ','Default = ',A60) 
      CALL PROMPT(':')
      READ(*,10)TMPFIL
      IF(TMPFIL.NE.' ')GASFIL=TMPFIL
      DBLUN=2
      CALL RDGAS

      IF(DBRECL.EQ.100)THEN
        ISOFIL='/home/oxpln99/plan/jaemin/isoexo.dat'
        DBFORM=0
      ELSEIF(DBRECL.EQ.112)THEN
        ISOFIL='/home/oxpln99/plan/jaemin/isoexo.dat'
        DBFORM=0
      ELSEIF(DBRECL.EQ.160)THEN
        ISOFIL='/home/oxpln99/plan/jaemin/isoexo.dat'
        DBFORM=0
      ELSE
        ISOFIL='/home/oxpln99/plan/jaemin/isoexo.dat'
        DBFORM=1
      END IF
      
      CALL WTEXT('Enter ABSOLUTE name of isotope file')
      WRITE(*,223)ISOFIL
      CALL PROMPT(':')
      READ(*,10)TMPFIL
      IF (TMPFIL.NE.' ')ISOFIL=TMPFIL
      CALL RDISO
      INDRL=ISYS()


      CALL PROMPT('Enter number of temperatures : ')
      READ*,NTEMP

      DO 1000 ITEMP=1,NTEMP

      I1=INT(ITEMP/10)
      I2=ITEMP-I1*10

      DBNAME=DBNAME1

      DBNAME(JD+1:JD+1)=CHAR(I1+48)
      DBNAME(JD+2:JD+2)=CHAR(I2+48)
      
      DBFILE=DIRNAM
      DO J=1,JD+2
         DBFILE(IL+J:IL+J)=DBNAME(J:J)
      END DO


      IPFILE(JIP+1:JIP+1)=CHAR(I1+48)
      IPFILE(JIP+2:JIP+2)=CHAR(I2+48)
      IPFILE(JIP+3:JIP+6)='.par'
      write(6,10)DBNAME
      write(6,10)DBNAME1
      write(6,10)IPFILE

      OPEN(UNIT=3,FILE=IPFILE,STATUS='OLD',ERR=900,
     1  ACCESS='SEQUENTIAL')

      print*,'File opened'

      CALL FILE(DBFILE,DBFILE,'asc')
      CALL FILE(DBFILE,KEYFIL,'key')      
      CALL FILE(DBFILE,INDFIL,'ind')

      OPEN(UNIT=4,FILE=DBFILE,STATUS='UNKNOWN',ACCESS='DIRECT',
     1    RECL=DBRECL,FORM='FORMATTED')
  

      WRITE(6,10)DBNAME
      WRITE(6,10)KEYFIL
      WRITE(6,10)IPFILE
      WRITE(6,10)DBFILE
      WRITE(6,10)INDFIL
      WRITE(6,10)GASFIL
      WRITE(6,10)ISOFIL

C
C     creating the key file
      OPEN(UNIT=2,FILE=KEYFIL,STATUS='UNKNOWN')
      WRITE(2,10)DBNAME
      WRITE(2,10)KEYFIL
      WRITE(2,10)IPFILE
      WRITE(2,10)DBFILE
      WRITE(2,10)INDFIL
      WRITE(2,10)GASFIL
      WRITE(2,10)ISOFIL
      WRITE(*,10)KEYFIL
      WRITE(*,10)IPFILE
      WRITE(*,10)DBFILE
      WRITE(*,10)INDFIL
      WRITE(*,10)GASFIL
      WRITE(*,10)ISOFIL
C20    FORMAT(1X,1A56,'  original key name ')
C21    FORMAT(1X,1A56,'  original database ')
C22    FORMAT(1X,1A56,'  main database file')
C23    FORMAT(1X,1A56,'  index file        ')
C24    FORMAT(1X,1A56,'  gas file          ')
C25    FORMAT(1X,1A56,'  isotope file      ')
C26    FORMAT(1X,1A16,40X,'  data base name    ')

C     creating the data base
      WRITE(*,202)
202   FORMAT(' creating the new data base')
      DBSIZ=0
      IPREC=0
100   IPREC=IPREC+1
      READ(3,120,END=130)BUFFER(1:BUFSIZ)
      DO 110 I=1,NTRAN
      DBSIZ=DBSIZ+1
      J=1+(I-1)*DBRECL
      K=I*DBRECL
      WRITE(4,120,REC=DBSIZ)BUFFER(J:K)
120   FORMAT(A)
110   CONTINUE
      GOTO 100
130   CONTINUE
      WRITE(*,131)DBSIZ
131   FORMAT(' written',I8,' records')
      OPUNIT=4
C


C     creating the index file
      WRITE(*,201)
201   FORMAT(' creating the index file')
      OPEN(UNIT=1,FILE=INDFIL,STATUS='UNKNOWN',ACCESS='DIRECT',
     1RECL=INDRL,FORM='UNFORMATTED')
      DO 30 I=1,MAXDGAS
      POINT(I)=0
30    CONTINUE
      J=DBSIZ
      DO 31 REC=J,1,-1
      READ(OPUNIT,120,REC=REC)BUFFER(:DBRECL)
C     adopting convention locally that a leading # indicates header
      IF(BUFFER(2:2).EQ.'#'.OR.BUFFER(1:1).EQ.'#')GOTO 31
      CALL RDLINE(BUFFER)
C      print*,REC,LNID,LOCID(LNID)
      IF(LNID.LT.1.AND.REC.EQ.DBSIZ)THEN
        DBSIZ=REC-1
        GOTO 31
        END IF
      WRITE(1,REC=REC)POINT(LOCID(LNID))
      POINT(LOCID(LNID))=REC
31    CONTINUE
C
      WRITE(*,203)DBSIZ
203   FORMAT(I11,' records actually contain lines or comments')
      WRITE(2,132)DBSIZ
132   FORMAT(1X,I10,26X,'  number of records')
      WRITE(2,134)DBFORM
134   FORMAT(1X,I10,26X,'  record format type [eg 0=HITRAN]')
      WRITE(2,133)INDRL
133   FORMAT(1X,I10,26X,'  record length of index file')
      WRITE(2,135)DBRECL
135   FORMAT(1X,I10,26X,'  record length of data base')
C

      CLOSE(1)
      CLOSE(2)
      CLOSE(3)
      CLOSE(4)

1000  CONTINUE

      STOP
C-------------------------
C     error traps
900   WRITE(*,901)
901   FORMAT(' unable to open original database file')
      STOP
      END
